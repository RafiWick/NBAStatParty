@using NBAStatParty.Models.DbModels;
@using Newtonsoft.Json;
@model List<League>
@{
    List<Conference> conferences = Model.SelectMany(l => l.Conferences).ToList() as List<Conference>;
    List<Division> divisions = conferences.SelectMany(c => c.Divisions).ToList() as List<Division>;
    string backgroundColor = ViewData["BackgroundColor"] as string;
    string textColor = ViewData["TextColor"] as string;
    string upColor = ViewData["TableUpColor"] as string;
    string downColor = ViewData["TableDownColor"] as string;
}

<script>
    var nav = document.getElementById('navbar');
    nav.style.backgroundColor = '@upColor';
</script>

<style>
    /* Dropdown Button */
    
    #text1{
        color:@textColor;
    }

    #text2{
        color: @textColor;
    }

    #text3{
        color: @textColor;
    }

    #text4 {
        color: @textColor;
    }

    .dropbtn {
        background-color: @upColor;
        color: @textColor;
        padding: 16px;
        font-size: 16px;
        border: none;
    }

    .toggled{
        background-color: @downColor;
    }
    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: @upColor;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: @textColor;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: @downColor;
            }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {
        background-color: @downColor;
    }
</style>


<script>
    document.body.style.backgroundColor = '@backgroundColor';
    
    
    
    function selectLeague(id) {
        
        var model = @Html.Raw(Json.Serialize(Model));
        const league = model.find(l => l.id === id)
        var leagueButton = document.getElementById("League");
        leagueButton.innerText = league.alias;

        

        var conferenceMenu = document.getElementById("Conferences")

        while(conferenceMenu.firstChild){
            conferenceMenu.removeChild(conferenceMenu.firstChild)
        }
        var conferenceButton = document.getElementById("Conference");
        conferenceButton.innerText = "Conference"

        var divisionMenu = document.getElementById("Divisions")
        while (divisionMenu.firstChild) {
            divisionMenu.removeChild(divisionMenu.firstChild)
        }
        var divisionButton = document.getElementById("Division");
        divisionButton.innerText = "Division"
        var teamMenu = document.getElementById("Teams")

        while (teamMenu.firstChild) {
            teamMenu.removeChild(teamMenu.firstChild)
        }

        for(const conference of league.conferences){
            var conf = document.createElement("a")
            conf.innerText = conference.alias
            conf.setAttribute('onclick', "selectConference('" + conference.id + "')")
            conferenceMenu.appendChild(conf);
        }
    }

    function selectConference(id) {
        var conferences = @Html.Raw(Json.Serialize(conferences));
        const conference = conferences.find(c => c.id === id)
        
        var conferenceButton = document.getElementById("Conference");
        conferenceButton.innerText = conference.alias;
        var divisionMenu = document.getElementById("Divisions")

        while (divisionMenu.firstChild) {
            divisionMenu.removeChild(divisionMenu.firstChild)
        }
        var divisionButton = document.getElementById("Division");
        divisionButton.innerText = "Division"
        var teamMenu = document.getElementById("Teams")

        while (teamMenu.firstChild) {
            teamMenu.removeChild(teamMenu.firstChild)
        }
        if(conference.divisions.length === 0){
            divisionButton = document.getElementById("Division");
            divisionButton.innerText = conference.alias;
            for (const team of conference.teams) {
                var tm = document.createElement("a")
                tm.innerText = team.market + " " + team.name
                tm.setAttribute('href', '/teams/?id=' + team.id)
                teamMenu.appendChild(tm);
            }
        }
        else{
            for (const division of conference.divisions) {
                var div = document.createElement("a")
                div.innerText = division.alias
                div.setAttribute('onclick', "selectDivision('" + division.id + "')")
                divisionMenu.appendChild(div);
            }
        }
        
    }

    function selectDivision(id) {
        var divisions = @Html.Raw(Json.Serialize(divisions));
        const division = divisions.find(d => d.id === id)

        var divisionButton = document.getElementById("Division");
        divisionButton.innerText = division.alias;
        var teamMenu = document.getElementById("Teams")

        while (teamMenu.firstChild) {
            teamMenu.removeChild(teamMenu.firstChild)
        }

        for (const team of division.teams) {
            var tm = document.createElement("a")
            tm.innerText = team.market + " " + team.name
            tm.setAttribute('href', '/teams/?id=' + team.id)
            tm.setAttribute('style', 'color: @textColor')
            teamMenu.appendChild(tm);
        }
    }

    function toggleTeam(){
        var teamButton = document.getElementById("teamButton");
        var playerButton = document.getElementById("playerButton");
        var teamDiv = document.getElementById("search-for-team");
        var playerDiv = document.getElementById("search-for-player");
        if(!teamButton.classList.contains("toggled")){
            teamButton.classList.add("toggled");
            playerButton.classList.remove("toggled");
            teamDiv.removeAttribute("hidden");
            playerDiv.setAttribute("hidden", "true");
        }
    }
    function togglePlayer() {
        var teamButton = document.getElementById("teamButton");
        var playerButton = document.getElementById("playerButton");
        var teamDiv = document.getElementById("search-for-team");
        var playerDiv = document.getElementById("search-for-player");
        if (!playerButton.classList.contains("toggled")){
            playerButton.classList.add("toggled");
            teamButton.classList.remove("toggled");
            playerDiv.removeAttribute("hidden")
            teamDiv.setAttribute("hidden", "true");
        }
    }

</script>


<h1 style ="color: @textColor">NBA Stat Party</h1>
<div>
    <button onclick="toggleTeam()" id="teamButton" class="dropbtn toggled">Search by Team</button>
    <button onclick="togglePlayer()" id="playerButton" class="dropbtn">Search by Player</button>
</div>
<div style="color: @textColor" id="search-for-team">
    <br />
    <div class="dropdown">
        <button class="dropbtn" id="League">League</button>
        <div class="dropdown-content" id="Leagues">
            @foreach(League league in Model)
            {
                <a onclick="selectLeague('@league.Id')">@league.Alias</a>
            }
        </div>
    </div>
    <div class="dropdown">
        <button class="dropbtn" id="Conference">Conference</button>
        <div class="dropdown-content" id="Conferences">
        </div>
    </div>
    <div class="dropdown">
        <button class="dropbtn" id="Division">Division</button>
        <div class="dropdown-content" id="Divisions">
        </div>
    </div>
    <div class="dropdown">
        <button class="dropbtn" id="Team">Team</button>
        <div class="dropdown-content" id="Teams">
        </div>
    </div>
</div>
<div id="search-for-player" hidden>
    <br />
    <h4 style="color: @textColor">Player</h4>
    <form method="get" action="/players/search">
        <label style="color: @textColor" for="Name">Name: </label>
        <input style="background-color: @upColor; color: @textColor" type="text" name="Name" id="Name" required />
        <button style="color: @textColor; background-color: @backgroundColor" type="submit">Search</button>
    </form>
</div>
<br />
<img width="50%" src="https://developer.sportradar.com/files/powered-by-sportradar-1000w.png">