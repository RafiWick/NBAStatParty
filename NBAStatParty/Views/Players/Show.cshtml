@using NBAStatParty.Models.DbModels;
@using NBAStatParty.Models.SR_PlayerProfile;
@{
    string currentTeam = ViewData["CurrentTeam"] as string;
    string? draftedBy = ViewData["DraftedBy"] as string;
    string backgroundColor = ViewData["BackgroundColor"] as string;
    string textColor = ViewData["TextColor"] as string;
    var playerData = ViewData["PlayerData"] as SR_PlayerProfile;
    string tableUpColor = ViewData["TableUpColor"] as string;
    string tableDownColor = ViewData["TableDownColor"] as string;
    string teamId = ViewData["TeamId"] as string;
    List<string> Favorites = ViewData["Favorites"] as List<string>;
}
@model Player

<script>
    var nav = document.getElementById('navbar');
    nav.style.backgroundColor = '@tableUpColor';
</script>

<style>
    /* Dropdown Button */

    #text1 {
        color: @textColor;
    }

    #text2 {
        color: @textColor;
    }

    #text3 {
        color: @textColor;
    }
</style>

<style>
    table {
        table-layout: fixed;
        width: 100%;
        border-collapse: collapse;
        border: 3px solid @tableDownColor;
    }

    tbody tr:nth-child(odd) {
        background-color: @tableUpColor;
    }

    tbody tr:nth-child(even) {
        background-color: @tableDownColor;
    }

    th,
    td {
        padding: 20px;
    }

    .fa-star {
        color: @backgroundColor;
        text-shadow: 0px 0px 10px @textColor;
    }

    .checked {
        color: @textColor;
        text-shadow: 0px 0px 2px @textColor;
    }

</style>

<h1 style="color: @textColor">@Model.FirstName <span onclick="checkFavorite()" id="Favorite" class="fa fa-star"></span></h1>
<h1 style="color: @textColor">@Model.LastName</h1>
<h3 style="color: @textColor"><a href="/teams/?id=@teamId" style="color: @textColor">@currentTeam</a><span onclick="checkTeamFavorite()" id="TeamFavorite" class="fa fa-star"></span> | #@Model.Number | @Model.Position</h3>
<h6 style="color: @textColor">@Model.HeightString(), @Model.Weight lbs</h6>
<h6 style="color: @textColor">Birthdate: @Model.Birthdate</h6>
@if(Model.College != null)
{
    <h6 style="color: @textColor">College: @Model.College</h6>
}
else if (Model.HighSchool != null)
{
    <h6 style="color: @textColor">HighSchool: @Model.HighSchool</h6>
}
else
{
    <h6 style="color: @textColor">Birth Place: @Model.BirthPlace</h6>
}

@if(draftedBy != null)
{
    <h7 style="color: @textColor">Drafted By @draftedBy in @Model.Draft.Year With Pick @Model.Draft.Pick in Round @Model.Draft.Round</h7>
}
else
{
    <h7 style="color: @textColor">Undrafted in @Model.RookieYear</h7>
}

<table id="default_averages">
    <thead>
        <tr>
            <th style="color: @textColor">YEAR</th>
            <th style="color: @textColor">TEAM</th>
            <th style="color: @textColor">GP</th>
            <th style="color: @textColor">GS</th>
            <th style="color: @textColor">MIN</th>
            <th style="color: @textColor">PTS</th>
            <th style="color: @textColor">OR</th>
            <th style="color: @textColor">DR</th>
            <th style="color: @textColor">REB</th>
            <th style="color: @textColor">AST</th>
            <th style="color: @textColor">STL</th>
            <th style="color: @textColor">BLK</th>
            <th style="color: @textColor">TO</th>
            <th style="color: @textColor">PF</th>
            <th style="color: @textColor">AST/TO</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var season in playerData.Seasons)
        {
            foreach(var team in season.Teams)
            {
                <tr>
                    <th style="color: @textColor">@season.Year</th>
                    <th style="color: @textColor">@team.Alias</th>
                    <th style="color: @textColor">@team.Total.Games_Played</th>
                    <th style="color: @textColor">@team.Total.Games_Started</th>
                    <th style="color: @textColor">@team.Average.Minutes</th>
                    <th style="color: @textColor">@team.Average.Points</th>
                    <th style="color: @textColor">@team.Average.Off_Rebounds</th>
                    <th style="color: @textColor">@team.Average.Def_Rebounds</th>
                    <th style="color: @textColor">@team.Average.Rebounds</th>
                    <th style="color: @textColor">@team.Average.Assists</th>
                    <th style="color: @textColor">@team.Average.Steals</th>
                    <th style="color: @textColor">@team.Average.Blocks</th>
                    <th style="color: @textColor">@team.Average.Turnovers</th>
                    <th style="color: @textColor">@team.Average.Personal_Fouls</th>
                    <th style="color: @textColor">@team.Total.Assists_Turnover_Ratio</th>
                </tr>
            }
        }
    </tbody>
</table>



<script>
    function setBackground(color) {
        document.body.style.backgroundColor = color;
    }
    setBackground('@backgroundColor')

    const favorites = @Html.Raw(Json.Serialize(Favorites));
    if (favorites.includes('@Model.TeamId')) {
        var icon = document.getElementById("TeamFavorite");
        icon.classList.add("checked");
    }
    if (favorites.includes('@Model.Id')) {
        var icon = document.getElementById("Favorite");
        icon.classList.add("checked");
    }

    async function checkTeamFavorite() {
        var icon = document.getElementById("TeamFavorite");
        if (icon.classList.contains("checked")) {
            icon.classList.remove("checked");
            await deleteTeamFavorite();
        }
        else {
            icon.classList.add("checked");
            await createTeamFavorite();
        }
    }

    async function createTeamFavorite() {
        const url = '/teams/addfavorite/?id=@Model.TeamId';
        const request = new Request(url, {
            method: 'POST'
        })
        const response = await fetch(request);
    }
    async function deleteTeamFavorite() {
        const url = "/teams/removefavorite/?id=@Model.TeamId";
        const request = new Request(url, {
            method: 'POST'
        })
        const response = await fetch(request);
    }


    


    async function checkFavorite() {
        var icon = document.getElementById("Favorite");
        if (icon.classList.contains("checked")) {
            icon.classList.remove("checked");
            await deleteFavorite();
        }
        else {
            icon.classList.add("checked");
            await createFavorite();
        }
    }

    async function createFavorite() {
        const url = '/players/addfavorite/?id=@Model.Id';
        const request = new Request(url, {
            method: 'POST'
        })
        const response = await fetch(request);
    }
    async function deleteFavorite() {
        const url = "/players/removefavorite/?id=@Model.Id";
        const request = new Request(url, {
            method: 'POST'
        })
        const response = await fetch(request);
    }

</script>